version: "3.8"

services:
  # postgres-proj:
  #   container_name: postgres_proj
  #   image: postgres:lastest
  #   volumes:
  #     - ../postgres:/workspace/postgres
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     POSTGRES_USER: proj
  #     POSTGRES_PASSWORD: proj
  #     POSTGRES_DB: proj

  #   networks:
  #     - proj

  etcd-proj:
    container_name: milvus-etcd-proj
    image: quay.io/coreos/etcd:v3.5.14
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ./volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-proj:
    container_name: milvus-minio-proj
    restart: always
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ./volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone-proj:
    container_name: milvus-standalone-proj
    restart: always

    # Change image to milvusdb/milvus:v2.5.1-gpu to enable GPU
    # image: milvusdb/milvus:v2.5.1-gpu
    image: milvusdb/milvus:v2.5.1
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd-proj:2379
      MINIO_ADDRESS: minio-proj:9000
    volumes:
      - ./volumes/milvus:/var/lib/milvus
      # - ./milvus.yaml:/milvus/configs/milvus.yaml
    ports:
      - "19530:19530"
      - "9091:9091"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3

    # uncomment the following lines to enable GPU
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           capabilities: ["gpu"]
    #           device_ids: ["0"]

    depends_on:
      - "etcd-proj"
      - "minio-proj"

  elastic-proj:
    es-proj:
      image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
      container_name: es_proj
      ports:
        - 35101:9200
      deploy:
        resources:
          limits:
            memory: 4GB
      environment:
        - ELASTIC_PASSWORD=admin
        - bootstrap.memory_lock=true
        - xpack.security.enabled=false
        - discovery.type=single-node
      networks:
        - proj
      mem_limit: 34359738368
      ulimits:
        memlock:
          soft: -1
          hard: -1
      healthcheck:
        test:
          [
            "CMD-SHELL",
            "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
          ]
        interval: 10s
        timeout: 10s
        retries: 120

  backend-proj:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_proj
    ports:
      - "35000:35000"
    volumes:
      - .:/app
    networks:
      - proj
    depends_on:
      - "milvus-standalone-proj"

  frontend-proj:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_proj
    ports:
      - "30000:3000"
    networks:
      - proj

networks:
  proj:
    name: proj
    external: true
